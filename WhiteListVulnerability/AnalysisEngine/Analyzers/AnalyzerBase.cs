using Contracts;
using System;
using System.Collections.Generic;
using System.IO;
using System.Text;

namespace AnalysisEngine.Analyzers
{
    public abstract class AnalyzerBase : IAnalyzer
    {
        protected List<Threat> Threats;
        public string Name { get; protected set; }
        public string Message { get; protected set; }

        public virtual AnalysisResult Analyze()
        {
            AnalysisResult result = new AnalysisResult
            {
                Result = VulnerabilityAnalysisResult.NotFound,
            };

            StringBuilder stringBuilder = new StringBuilder();
            foreach (var item in Threats)
            {
                bool fileExists = false;
                fileExists = File.Exists(item.FilePath);
                string line;
                if (fileExists)
                {
                    line = "exists";
                    result.Result = VulnerabilityAnalysisResult.Found;
                    result.Threats.Add(item);
                }
                else
                    line = "does not exist";

                stringBuilder.AppendLine($"Threat name: {item.Name}. File: {item.FilePath} {line}");
            }

            Message = stringBuilder.ToString();

            return result;
        }
    }
}
