using Contracts;
using System;
using System.Collections.Generic;

namespace AnalysisEngine.Analyzers
{
    public class Analyzer
    {
        List<IAnalyzer> _analyzers;
        int _totalThreatsFound = 0;
        public Analyzer()
        {
            _analyzers = new List<IAnalyzer>() {
                //new MsBuildAnalyzer(),
                //new InstallUtilAnalyzer(),
                //new PresentationHostAnalyzer(),
                //new MsHtaAnalyzer(),
                //new RegSvr32Analyzer(),
                //new WmicAnalyzer(),
                //new ScriptAnalyzer(),
                //new CmdAnalyzer(),
                //new CsiAnalyzer(),
                //new MsXslAnalyzer(),
                //new AtBrokerAnalyzer(),
                //new ForFilesAnalyzer(),
                new RunDll32Analyzer()
            };
        }

        public List<AnalysisResult> GetAnalysisResults()
        {
            List<AnalysisResult> result = new List<AnalysisResult>();
            foreach (var item in _analyzers)
                result.Add(item.Analyze());

            return result;
        }

        public void Analyze()
        {
            foreach (var item in _analyzers)
            {
                var analysisResult = item.Analyze();
                Console.WriteLine($"---{item.Name}---");
                Console.WriteLine(item.Message);
                Console.WriteLine($"---/{item.Name}---");
                _totalThreatsFound += analysisResult.Threats.Count;
            }

            Console.WriteLine($"Total threats found: {_totalThreatsFound}");
        }
    }
}